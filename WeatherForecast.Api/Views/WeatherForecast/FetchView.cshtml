@ViewData["Title"] Weather forecasts

<h1>@ViewData["Title"]</h1>

@model WeatherForecast.Api.Responses.FetchWeatherForecastsResponse

@using WeatherForecast.Domain.Aggregates.WeatherForecast.Values.WindValue.Enums;


<div>
    <div class="items">    
        @foreach (var wf in Model.WeatherForecasts)
        {
            <div class="item">
                <h5 class="field">@wf.DateWeatherEvent</h5>
                <h5 class="field">@wf.Temperature</h5>
                <h5 class="field">@wf.HumidityInPercent</h5>
                <h5 class="field">@wf.DewPoint</h5>
                <h5 class="field">@wf.AtmospherePressure</h5>
                <h5 class="field">@wf.Wind.DirectionFirst</h5>
                <h5 class="field">@if (wf.Wind.DirectionSecond != wf.Wind.DirectionFirst && wf.Wind.DirectionSecond is not Direction.Calm) @wf.Wind.DirectionSecond</h5>
                <h5 class="field">@wf.CloudBaseInMeters</h5>
                <h5 class="field">@wf.CloudinessInPercent</h5>
                <h5 class="field">@wf.HorizontalVisibilityInKilometer</h5>
            </div>
        }
       <button onclick="addItems()">Ещё 20</button>
    </div>
</div>

<script>
    var offset = 20

    addItems = async () => {      
        const response = await fetch(`/WeatherForecast/fetch?offset=${offset}&size=20`)

        offset += 20   

        var items = document.querySelector(".items")
        var weatherForecasts = (await response.json()).weatherForecasts

        //indian style start
        for (let i = 0; i < weatherForecasts.length; ++i) {
            var item = document.createElement("div")
            var field = document.createElement("h5")

            item.className = "item"

            field.className = "field"
            field.innerHTML = weatherForecasts[i].dateWeatherEvent.toString()
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].temperature
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].humidityInPercent
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].dewPoint
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].atmospherePressure
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].wind.directionFirst
            item.appendChild(field)

            if (weatherForecasts[i].wind.directionFirst != weatherForecasts[i].wind.directionSecond && weatherForecasts[i].wind.directionSecond != "Calm") {
                field = document.createElement("h5")
                field.className = "field"
                field.innerHTML = weatherForecasts[i].wind.directionSecond
                item.appendChild(field)
            }

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].cloudinessInPercent
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].cloudBaseInMeters
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].horizontalVisibilityInKilometer
            item.appendChild(field)

            field = document.createElement("h5")
            field.className = "field"
            field.innerHTML = weatherForecasts[i].weatherEvent
            item.appendChild(field)

            items.appendChild(item)
        }
    }
</script>

<style lang="css" scoped> 
    .item {
        background-color: blanchedalmond;
        border-radius: 5px;
        margin: 10px;
    }

    .field{
        display: inline-flex;
        margin: 20px;
    }
</style>

@{
    var a = "";
    string GetBaseUrl() {
        a = Url.ActionContext.HttpContext.Request.Scheme + '/' + Url.ActionContext.HttpContext.Request.Host;

        return a;
    }

    /*
                 field.innerHTML = weatherForecasts[i].dateWeatherEvent.toString()
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].temperature
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].humidityInPercent
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].dewPoint
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].atmospherePressure
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].wind
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].cloudinessInPercent
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].cloudBaseInMeters
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].horizontalVisibilityInKilometer
                    item.appendChild(field)

            field.innerHTML = weatherForecasts[i].weatherEvent
    item.appendChild(field)
    */
}
